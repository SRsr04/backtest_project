import pandas as pd

# –°–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö —Ñ–∞–π–ª—ñ–≤ —Ç–∞ —ó—Ö –∫–æ–ª–æ–Ω–æ–∫ –∑ –¥–∞—Ç–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
FILES_TO_CHECK = [
    {'name': 'm5_candels.csv', 'date_cols': ['datetime']},
    {'name': 'fvg_m15.csv', 'date_cols': ['datetime']}, # –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ –∫–æ–ª–æ–Ω–∫–∞ –≤–∂–µ –ø–µ—Ä–µ–π–º–µ–Ω–æ–≤–∞–Ω–∞ –Ω–∞ 'datetime'
    {'name': 'bos_m5.csv', 'date_cols': ['bos_time_kiev', 'fract_time_kiev']},
    {'name': 'h1_candels.csv', 'date_cols': ['datetime']},
    {'name': 'm15_candels.csv', 'date_cols': ['datetime']},
]

def diagnose_file(filename, date_columns):
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª—É."""
    print(f"\n{'='*20}\n–ê–ù–ê–õ–Ü–ó–£–Ñ–ú–û –§–ê–ô–õ: {filename}\n{'='*20}")
    
    try:
        df = pd.read_csv(filename)
    except FileNotFoundError:
        print(f"–ü–û–ú–ò–õ–ö–ê: –§–∞–π–ª '{filename}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–∑–≤—É —Ç–∞ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è.")
        return

    # –ü–µ—Ä–µ–π–º–µ–Ω–æ–≤—É—î–º–æ –∫–æ–ª–æ–Ω–∫—É 'time' –≤ 'datetime' –¥–ª—è FVG —Ñ–∞–π–ª—É –¥–ª—è —É–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó
    if filename == 'fvg_m15.csv' and 'time' in df.columns:
        df.rename(columns={'time': 'datetime'}, inplace=True)

    for col_name in date_columns:
        if col_name not in df.columns:
            print(f"–ü–û–ü–ï–†–ï–î–ñ–ï–ù–ù–Ø: –£ —Ñ–∞–π–ª—ñ '{filename}' –≤—ñ–¥—Å—É—Ç–Ω—è –∫–æ–ª–æ–Ω–∫–∞ '{col_name}'.")
            continue

        print(f"\n--- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–ª–æ–Ω–∫–∏: '{col_name}' ---")
        
        # –°–ø—Ä–æ–±–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è
        converted_col = pd.to_datetime(df[col_name], errors='coerce')
        
        # –ü–æ—à—É–∫ –ø—Ä–æ–±–ª–µ–º–Ω–∏—Ö —Ä—è–¥–∫—ñ–≤
        problem_rows = df[converted_col.isna() & df[col_name].notna()]
        
        if not problem_rows.empty:
            print(f"üî• –ó–ù–ê–ô–î–ï–ù–û {len(problem_rows)} –ü–†–û–ë–õ–ï–ú–ù–ò–• –†–Ø–î–ö–Ü–í —É –∫–æ–ª–æ–Ω—Ü—ñ '{col_name}'!")
            print("–û—Å—å –ø–µ—Ä—à—ñ 5 –∑ –Ω–∏—Ö:")
            print(problem_rows[[col_name]].head())
        else:
            print(f"‚úÖ –ü—Ä–æ–±–ª–µ–º –∑ —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–∞—Ç–∏ –≤ –∫–æ–ª–æ–Ω—Ü—ñ '{col_name}' –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ.")

# --- –ì–æ–ª–æ–≤–Ω–∏–π —Ü–∏–∫–ª –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ---
for file_info in FILES_TO_CHECK:
    diagnose_file(file_info['name'], file_info['date_cols'])

print(f"\n{'='*20}\n–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ.\n{'='*20}")